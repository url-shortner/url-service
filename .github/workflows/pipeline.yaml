name: Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: ${{ matrix.oses }}

    strategy:
      matrix:
        python_v: ["3.8", "3.9"]
        oses: ["ubuntu-20.04", "macos11"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python version
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_v }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        pipenv install --dev --ignore-pipfile --system
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Run Static type test
      run: |
        mypy app/ --install-types --non-interactive 
  build-push:

    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.IMAGE_NAME }}
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}